{"version":3,"file":"background.js","sources":["../src/background.ts"],"sourcesContent":["import { levels } from './types/levels'\n\n// Initialize the extension\nlet currentLevel = {\n  level: 1,\n  context: levels[0].context,\n  description: levels[0].description,\n  details: levels[0].details\n}\n\n// Get current level from storage\nchrome.storage.local.get(['currentLevel'], (result) => {\n  if (result.currentLevel) {\n    currentLevel = result.currentLevel\n  }\n})\n\n// Message handlers for level changes and AI readiness\nchrome.runtime.onMessage.addListener((message, _sender, sendResponse) => {\n  if (message.type === \"SET_LEVEL\") {\n    currentLevel = {\n      level: message.level.level,\n      context: message.level.context,\n      description: message.level.description,\n      details: message.level.details\n    }\n    chrome.storage.local.set({ currentLevel })\n    sendResponse({ success: true })\n  }\n})\n\n// Create context menu on install\nchrome.runtime.onInstalled.addListener(() => {\n  chrome.contextMenus.create({\n    id: \"summarize-text\",\n    title: \"Explain in Engineering Eras\",\n    contexts: [\"selection\"]\n  })\n})\n\nconst getOptions = () => ({\n  sharedContext: `${currentLevel.context}. ${currentLevel.description}. ${currentLevel.details}`,\n  type: \"tl;dr\",\n  format: \"markdown\",\n  length: \"medium\"\n})\n\n// Handle context menu clicks\nchrome.contextMenus.onClicked.addListener(async (info, tab) => {\n  if (info.menuItemId === \"summarize-text\" && info.selectionText && tab?.id) {\n    if (chrome.sidePanel && tab) {\n      try {\n        await chrome.sidePanel.open({ windowId: tab.windowId })\n        await new Promise((resolve) => setTimeout(resolve, 500))\n      } catch (error) {\n        console.error('Error opening side panel:', error)\n      }\n    }\n\n    try {\n      // @ts-expect-error new chrome feature\n      const available = (await self.ai.summarizer.capabilities()).available\n      let summarizer\n\n      if (available === \"no\") {\n        chrome.runtime.sendMessage({\n          type: \"ERROR\",\n          error: \"The Summarizer API isn't usable\"\n        })\n        return\n      }\n\n      if (available === \"readily\") {\n        chrome.runtime.sendMessage({\n          type: \"STREAM_RESPONSE\",\n          isFirst: true,\n          level: currentLevel.level\n        })\n\n        // Initialize summarizer\n        // @ts-expect-error new chrome feature\n        summarizer = await self.ai.summarizer.create(getOptions())\n        await summarizer.ready\n\n        // Process text and stream results\n        const stream = await summarizer.summarize(info.selectionText, {\n          context: `article from ${new URL(tab.url!).origin}`\n        })\n        \n        for await (const chunk of stream) {\n          await chrome.runtime.sendMessage({\n            type: \"STREAM_RESPONSE\",\n            chunk,\n            level: currentLevel.level\n          })\n        }\n        \n        await chrome.runtime.sendMessage({\n          type: \"STREAM_COMPLETE\",\n          level: currentLevel.level\n        })\n      } else {\n        // API needs to download models first\n        // @ts-expect-error new chrome feature\n        summarizer = await self.ai.summarizer.create(getOptions())\n        // Track and report download progress\n        summarizer.addEventListener(\n          \"downloadprogress\",\n          (e: { loaded: number; total: number }) => {\n            console.log(e.loaded, e.total)\n            chrome.runtime.sendMessage({\n              type: \"AI_INITIATE\",\n              total: e.total,\n              loaded: e.loaded,\n            })\n          }\n        )\n        await summarizer.ready\n      }\n      \n    } catch (error) {\n      console.error('Summarization error:', error)\n      chrome.runtime.sendMessage({\n        type: \"ERROR\",\n        error: error instanceof Error ? error.message : \"An error occurred during summarization\"\n      })\n    }\n  }\n})"],"names":[],"mappings":"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"}